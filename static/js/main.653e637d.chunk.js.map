{"version":3,"sources":["components/data.js","components/products.js","components/cart.js","components/saleProducts.js","App.js","serviceWorker.js","index.js"],"names":["components_data","id","image","price","currency","name","Products","_ref","product","addToCart","react_default","a","createElement","className","concat","src","alt","Row","Col","md","onClick","Cart","cartProduct","deleteCart","addAmountCart","totalPrices","react","Table","size","responsive","map","index","key","react_fontawesome_index_es","icon","quantity","colspan","SaleProducts","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","data","cartItems","state","alreadyExists","find","newObjItem","item","push","setState","cartItemsCount","total","cartTotal","removeItemFromCart","currentItem","filter","cartItem","isHovered","isLoading","_this2","setTimeout","_this3","Container","Typist_default","products","images","length","cart","Component","library","add","faTrashAlt","App","saleProducts","Boolean","window","location","hostname","match","require","config","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.653e637d.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    image:\n      \"http://s3-ap-southeast-1.amazonaws.com/s3.irvinsaltedegg.com/engineering-test/images/product-1.jpg\",\n    price: 15,\n    currency: \"SGD\",\n    name: \"IPhone 7\"\n  },\n  {\n    id: 2,\n    image:\n      \"http://s3-ap-southeast-1.amazonaws.com/s3.irvinsaltedegg.com/engineering-test/images/product-2.jpg\",\n    price: 25,\n    currency: \"SGD\",\n    name: \"3 Soldiers Toy\"\n  },\n  {\n    id: 3,\n    image:\n      \"http://s3-ap-southeast-1.amazonaws.com/s3.irvinsaltedegg.com/engineering-test/images/product-3.jpg\",\n    price: 12.5,\n    currency: \"SGD\",\n    name: \"Cool T-Shirt\"\n  },\n  {\n    id: 4,\n    image:\n      \"http://s3-ap-southeast-1.amazonaws.com/s3.irvinsaltedegg.com/engineering-test/images/product-2.jpg\",\n    price: 25,\n    currency: \"SGD\",\n    name: \"Another Toy\"\n  },\n  {\n    id: 5,\n    image:\n      \"http://s3-ap-southeast-1.amazonaws.com/s3.irvinsaltedegg.com/engineering-test/images/product-3.jpg\",\n    price: 12.5,\n    currency: \"SGD\",\n    name: \"Another T-Shirt\"\n  }\n];\n","import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\n\nconst Products = ({ product, addToCart }) => {\n  return (\n    <div className={`image-${product.id}`}>\n      <img src={product.image} alt={`${product.image}`} />\n\n      <div className=\"product-info\">\n        <Row>\n          <Col md={4}>\n            <div className={`group-title-and-price`}>\n              <div className=\"title\">product {product.id}</div>\n              <div className=\"price\">${product.price}</div>\n            </div>\n          </Col>\n          <Col md={8} className=\"centering-add-to-cart\">\n            <div onClick={() => addToCart(product)} className=\"add-to-cart-button\">add to cart</div>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default Products;\n","import React, { Fragment } from \"react\";\nimport { Table } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Cart = ({ cartProduct, deleteCart, addAmountCart, totalPrices }) => {\n  return (\n    <Fragment>\n      <Table className=\"header-fixed\" size=\"sm\" responsive>\n        <thead>\n          <tr>\n            <th />\n            <th>Product</th>\n            <th>Price</th>\n            <th>Quantity</th>\n            <th>Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          {cartProduct.map((product, index) => {\n            return (\n              <tr key={`cart-item-${index}`}>\n                <td>\n                  <div\n                    className=\"delete-cart\"\n                    onClick={() => deleteCart(product)}\n                  >\n                    <FontAwesomeIcon icon=\"trash-alt\" />\n                  </div>\n                </td>\n                <td>\n                  <div className={`image-and-title-cart`}>\n                    <img src={product.image} alt={`${product.image}`} />\n                    <div>Product {product.id}</div>\n                  </div>\n                </td>\n                <td>${product.price}</td>\n                <td className=\"quantity-cart-container\">\n                  <small onClick={() => deleteCart(product)}> - </small>\n                  <div className=\"quantity-cart\">{product.quantity}</div>\n                  <small onClick={() => addAmountCart(product)}> + </small>\n                </td>\n                <td>$ {product.quantity * product.price}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n        <tbody>\n        <tr>\n        <td colspan=\"5\" className='total-price-cart'>$ {totalPrices}</td>\n        </tr>\n        </tbody>\n      </Table>\n    </Fragment>\n  );\n};\n\nexport default Cart;\n","import React, { Component } from \"react\";\nimport data from \"./data\";\nimport { Container } from \"reactstrap\";\nimport Typist from \"react-typist\";\n\nimport Products from \"./products\";\nimport Cart from \"./cart\";\n\nclass SaleProducts extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isHovered: false,\n      isLoading: true,\n      data: data,\n      cartItems: [],\n      cartTotal: 0,\n      cartItemsCount: 0\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        isLoading: false\n      });\n    }, 5000);\n  }\n\n  addToCart = data => {\n    let cartItems = this.state.cartItems;\n    const alreadyExists = cartItems.find(product => product.id === data.id);\n    let newObjItem = {};\n    newObjItem.id = data.id;\n    newObjItem.image = data.image;\n    newObjItem.price = data.price;\n    newObjItem.currency = data.currency;\n    newObjItem.quantity = 1;\n\n    if (alreadyExists) {\n      cartItems = cartItems.map(item => {\n        if (item.id === data.id) {\n          item.quantity++;\n        }\n        return item;\n      });\n    } else {\n      cartItems.push(newObjItem);\n    }\n\n    this.setState({\n      cartItems\n    });\n\n    let cartItemsCount = this.state.cartItemsCount + 1;\n    this.setState({ cartItemsCount: cartItemsCount });\n\n    let total = this.state.cartTotal + 1 * data.price;\n    this.setState({ cartTotal: total });\n  };\n\n  removeItemFromCart = currentItem => {\n    let cartItems = this.state.cartItems;\n    const alreadyExists = cartItems.find(\n      product => product.id === currentItem.id\n    );\n\n    if (alreadyExists) {\n      cartItems = cartItems\n        .map(item => {\n          if (item.id === currentItem.id) {\n            item.quantity--;\n          }\n          return item;\n        })\n        .filter(cartItem => cartItem.quantity > 0);\n    }\n\n    this.setState({\n      cartItems\n    });\n\n    let cartItemsCount = this.state.cartItemsCount - 1;\n    this.setState({ cartItemsCount: cartItemsCount });\n\n    let total = this.state.cartTotal - 1 * data.price;\n    this.setState({ cartTotal: total });\n  };\n\n  render() {\n    return (\n      <Container>\n        <div className=\"products\">\n          <div className=\"group-images\">\n            {this.state.isLoading ? (\n              <div className=\"loading-page\">\n                <Typist>LOADING . . . Please wait . . .</Typist>\n              </div>\n            ) : (\n              this.state.data.map((data, index) => {\n                return (\n                  <Products\n                    key={`images-${data.images}-${index}`}\n                    product={data}\n                    addToCart={this.addToCart}\n                  />\n                );\n              })\n            )}\n          </div>\n\n          <div className=\"cart\">\n          {this.state.isLoading ? '' : <div>\n            <div className=\"cart-title\">\n              SHOPPING CART -\n              {this.state.cartItemsCount <= 1\n                ? `${this.state.cartItemsCount} ITEM`\n                : `${this.state.cartItemsCount} ITEMS`}\n            </div>\n            <div>\n              {this.state.cartItems.length <= 0 ? (\n                <div>There is no cart yet</div>\n              ) : (\n                <Cart\n                  cartProduct={this.state.cartItems}\n                  deleteCart={this.removeItemFromCart}\n                  addAmountCart={this.addToCart}\n                  totalPrices={this.state.cartTotal}\n                />\n              )}\n            </div>\n            </div>\n          }\n          </div>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default SaleProducts;\n","import React, { Component } from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./App.scss\";\n\nimport SaleProducts from \"./components/saleProducts\";\n\nlibrary.add(faTrashAlt);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <SaleProducts />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nrequire('dotenv').config()\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}